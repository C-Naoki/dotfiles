yarn run dev
yarn run dev
yarn run dev
yarn run dev
yarn run dev
yarn run dev
yarn run dev
yarn run dev
poetry run python src/main.py
poetry run python src/main.py
poetry run python src/main.py
poetry run python src/main.py
poetry run python src/main.py
poetry run python src/main.py
poetry run python src/main.py
poetry run python src/main.py
poetry run python src/main.py
poetry run python src/main.py
poetry run python src/main.py
poetry run python src/main.py
poetry run python src/main.py
poetry run python src/main.py
poetry run python src/main.py
poetry run python src/main.py
poetry run python src/main.py
poetry run python src/main.py
poetry run python src/main.py
poetry run python src/main.py
poetry run python src/main.py
poetry run python src/main.py
poetry run python src/main.py
poetry run python src/main.py
poetry run python src/main.py
poetry run python src/main.py
poetry run python src/main.py
poetry run python src/main.py
poetry run python src/main.py
poetry run python src/main.py
poetry run python src/main.py
poetry run python src/main.py
poetry run python src/main.py
poetry run python src/main.py
poetry run python src/main.py
poetry run python src/main.py
poetry run python src/main.py
poetry run python src/main.py
poetry run python src/main.py
poetry run python src/main.py
poetry run python src/main.py
poetry run python src/main.py
poetry run python src/main.py
poetry run python src/main.py
poetry run python src/main.py
poetry run python src/main.py
poetry run python src/main.py
poetry run python src/main.py
poetry run python src/main.py
poetry run python src/main.py
poetry run python src/main.py
poetry run python src/main.py
poetry run python src/main.py
poetry run python src/main.py
poetry run python src/main.py
poetry run python src/main.py
poetry run python src/main.py
poetry run python src/main.py
poetry run python src/main.py
poetry run python src/main.py
poetry run python src/main.py
poetry run python src/main.py
poetry run python src/main.py
poetry run python src/main.py
poetry run python src/main.py
poetry run python src/main.py
poetry run python src/main.py
poetry run python src/main.py
poetry run python src/main.py
poetry run python src/main.py
poetry run python src/main.py
poetry run python src/main.py
poetry run python src/main.py
poetry run python src/main.py
poetry run python src/main.py
poetry run python src/main.py
poetry run python src/main.py
poetry run python src/main.py
poetry run python src/main.py
poetry run python src/main.py
oh-my-posh upgrade
yarn run dev
yarn run dev
yarn run dev
yarn run dev
yarn run dev
yarn run dev
yarn run dev
yarn run dev
yarn run dev
yarn run dev
yarn run dev
yarn run dev
yarn run dev
yarn run dev
yarn run dev
yarn run dev
yarn run dev
yarn run dev
yarn run dev
yarn run dev
yarn run dev
yarn run dev
yarn run dev
yarn run dev
yarn run dev
yarn run dev
yarn add lucide-react
ls
cd components
ls
cd src
yarn run dev
yarn run dev
yarn run dev
yarn run dev
yarn run dev
yarn install
yarn update
git reset --soft HEAD^
$ git push -f origin HEAD
git push -f origin HEAD
yarn run dev
yarn run dev
yarn run dev
oh-my-posh upgrade
yarn run dev
npx zenn preview
npm install zenn-cli@latest
npx zenn preview
yarn run dev
yarn why punycode
yarn upgrade uri-js@latest
yarn update uri-js@latest
yarn upgrade uri-js@latest
yarn
yarn upgrade uri-js
yarn --version
yarn up uri-js@latest
yarn up uri-js
yarn add  uri-js
yarn add uri-js
yarn add
poetry init
poetry add numpy scipy
poetry env use 3.9.15
pyenv global 3.9.15
poetry env use 3.9.15
poetry add numpy scipy
poetry add numpy
poetry add scipy
poetry add "scipy<1.14.0"
poetry poetry source add torch_cu117 --priority=explicit https://download.pytorch.org/whl/cu117
poetry source add torch_cu117 --priority=explicit https://download.pytorch.org/whl/cu117
poetry add torch
poetry run python casper_main.py --iter_mod 7 --run_mode 0 --linear --modeltype notears --s0 40 \\
    --d 10 --n 2000 --trial 5 --seed 0 \\
    --lambda1 0.002 --lambda2 0.002  --graph_type "ER" --batch_size 500
poetry add tqdm
poetry run python casper_main.py --iter_mod 7 --run_mode 0 --linear --modeltype notears --s0 40 \\
    --d 10 --n 2000 --trial 5 --seed 0 \\
    --lambda1 0.002 --lambda2 0.002  --graph_type "ER" --batch_size 500
poetry add igraph
poetry run python casper_main.py --iter_mod 7 --run_mode 0 --linear --modeltype notears --s0 40 \\
    --d 10 --n 2000 --trial 5 --seed 0 \\
    --lambda1 0.002 --lambda2 0.002  --graph_type "ER" --batch_size 500
poetry add cdt
poetry run python casper_main.py --iter_mod 7 --run_mode 0 --linear --modeltype notears --s0 40 \\
    --d 10 --n 2000 --trial 5 --seed 0 \\
    --lambda1 0.002 --lambda2 0.002  --graph_type "ER" --batch_size 500
poetry add configargparse
poetry run python casper_main.py --iter_mod 7 --run_mode 0 --linear --modeltype notears --s0 40 \\
    --d 10 --n 2000 --trial 5 --seed 0 \\
    --lambda1 0.002 --lambda2 0.002  --graph_type "ER" --batch_size 500
poetry run python casper_main.py --iter_mod 7 --run_mode 0 --linear --modeltype notears --s0 40 \\
    --d 10 --n 2000 --trial 5 --seed 0 \\
    --lambda1 0.002 --lambda2 0.002  --graph_type "ER" --batch_size 500
poetry add matplotlib
poetry run python casper_main.py --iter_mod 7 --run_mode 0 --linear --modeltype notears --s0 40 \\
    --d 10 --n 2000 --trial 5 --seed 0 \\
    --lambda1 0.002 --lambda2 0.002  --graph_type "ER" --batch_size 500
yarn run dev
yarn run dev
yarn run dev
brew list
ngrok http 8000
ngrok http 8000
poetry init
pyenv versions
pyenv install 3.12
pyenv --versions
pyenv --version
pyenv install --list
pyenv install 3.12.2
brew update && brew upgrade pyenv
brew update
brew upgrade pyenv
pyenv install 3.12
poetry env use 3.12.4
poetry add fastapi
poetry add ruff
poetry add slack_adk
poetry add slack_sdk
poetry add pydantic
poery add dotenv
poetry add dotenv
python main.py
poetry run python main.py
poetry add sqlalchemy
poetry run python main.py
git pull
uvicorn main:app --reload
poetry add uvicorn
uvicorn main:app --reload
poetry run uvicorn main:app --reload
uvicorn main:app --reload --debug
poetry run uvicorn main:app --reload --debug
poetry run uvicorn main:app --reload
poetry run python tests/test_add_commands.py
poetry add requests
poetry run python tests/test_add_commands.py
poetry run python tests/test_add_commands.py
poetry run python tests/test_add_commands.py
poetry run python tests/test_add_commands.py
poetry run python tests/test_add_commands.py
poetry run python tests/test_add_commands.py
git pull
poetry lock --no-update\

pyclone
ls
la
cd
pyclone
poetry self update
poetry -V
poetry self update
which poetry
find poetry
python
poetry config virtualenvs.in-project true\

poetry config virtualenvs.in-project
poetry config
poetry config virtualenvs.in-project
which poetry
poetry config --list
poetry env list
git remote -v
git remote -VC
git remote -V
la
git config --global user.name
git config --global user.email
ls
la
code .zshrc
code .zshrc
which pyclone.sh
cd shell
ls
code pyclone.sh
cd
source ~/.zsh
source ~/.zshrc
pyclone
pyclone
ls
cd ..
ls
cd git
cd
ls
cd dev
code testtest
cd ..
ls
cd dev
ls
rm -rf testtest
ls
poetry add ipykernel
which Rscript
which script.R
python casper_main.py --iter_mod 7 --run_mode 0 --linear --modeltype notears --s0 40 \\
    --d 10 --n 2000 --trial 5 --seed 0 \\
    --lambda1 0.002 --lambda2 0.002  --graph_type "ER" --batch_size 500
poetry run python casper_main.py --iter_mod 7 --run_mode 0 --linear --modeltype notears --s0 40 \\
    --d 10 --n 2000 --trial 5 --seed 0 \\
    --lambda1 0.002 --lambda2 0.002  --graph_type "ER" --batch_size 500
poetry run python casper_main.py --iter_mod 7 --run_mode 0 --linear --modeltype notears --s0 40 \\
    --d 10 --n 2000 --trial 5 --seed 0 \\
    --lambda1 0.002 --lambda2 0.002  --graph_type "ER" --batch_size 500
poetry run python casper_main.py --iter_mod 7 --run_mode 0 --linear --modeltype notears --s0 40 \\
    --d 10 --n 2000 --trial 5 --seed 0 \\
    --lambda1 0.002 --lambda2 0.002  --graph_type "ER" --batch_size 500
poetry run python casper_main.py --iter_mod 7 --run_mode 0 --linear --modeltype notears --s0 40 \\
    --d 10 --n 2000 --trial 5 --seed 0 \\
    --lambda1 0.002 --lambda2 0.002  --graph_type "ER" --batch_size 500
poetry run python casper_main.py --iter_mod 7 --run_mode 0 --linear --modeltype notears --s0 40 \\
    --d 10 --n 2000 --trial 5 --seed 0 \\
    --lambda1 0.002 --lambda2 0.002  --graph_type "ER" --batch_size 500
poetry run python casper_main.py --iter_mod 7 --run_mode 0 --linear --modeltype notears --s0 5 \\
    --d 5 --n 1951 --trial 1 --seed 0 \\
    --lambda1 0.002 --lambda2 0.002  --graph_type "ER" --batch_size 500 --linear_sem_type "laplace"
poetry run python casper_main.py --iter_mod 7 --run_mode 0 --linear --modeltype notears --s0 5 \\
    --d 5 --n 1951 --trial 1 --seed 0 \\
    --lambda1 0.002 --lambda2 0.002  --graph_type "ER" --batch_size 500 --linear_sem_type "laplace"
poetry run python casper_main.py --iter_mod 7 --run_mode 0 --linear --modeltype notears --s0 5 \\
    --d 5 --n 1951 --trial 1 --seed 0 \\
    --lambda1 0.002 --lambda2 0.002  --graph_type "ER" --batch_size 500 --linear_sem_type "laplace"
poetry run python casper_main.py --iter_mod 7 --run_mode 0 --linear --modeltype notears --s0 5 \\
    --d 5 --n 1951 --trial 1 --seed 0 \\
    --lambda1 0.002 --lambda2 0.002  --graph_type "ER" --batch_size 500 --linear_sem_type "laplace"
poetry run python casper_main.py --iter_mod 7 --run_mode 0 --linear --modeltype notears --s0 5 \\
    --d 5 --n 1951 --trial 1 --seed 0 \\
    --lambda1 0.002 --lambda2 0.002  --graph_type "ER" --batch_size 500 --linear_sem_type "laplace"
git remote add origin https://github.com/C-Naoki/CASPER.git
git remote -v
git remote set-url origin https://github.com/C-Naoki/CASPER.git
git remote -v
la
git status
git remote -v
git remote -v
ls
rm -rf data/
rm -rf notears
poetry install
poetry env use 3.9.15
pyenv global
pyenv global 3.9.15
poetry env use 3.9.15
git remote -v
git rebase -i HEAD~
git commit --amend
git push --force-with-lease origin main
git rebase --continue
git push --force-with-lease origin main
which Rscript
la
code .zshrc
source ~/.zshrc
la
cd Library/
ls
cd R
ls
cd 4.0
ls
library
ls
cd
which R
which Rscript
/opt/homebrew/bin/Rscript
ls
cd ..
ls
cd naoki
ls
cd ../..
ls
cd opt/homebrew
ls
cd bin
ls
cd
ls
R
R
la
echo $R_HOME
touch .Rprofile
echo 'Sys.setlocale("LC_ALL", "ja_JP.UTF-8")' > ~/.Rprofile
cat ~/.Rprofile
source ~/.Rprofile
echo 'export LC_ALL=ja_JP.UTF-8' >> ~/.zshrc
echo 'export LANG=ja_JP.UTF-8' >> ~/.zshrc
source ~/.zshrc
code .zshrc
source ~/.zshrc
code .Rscript
code .Rprofile
code .zshrc
echo $R_HOME
source ~/.zshrc
source ~/.zshrc
echo $R_HOME
code .Rprofile
code .zshrc
source ~/.zshrc
source ~/.zshrc
code .Rprofile
brew info r
source ~/.zshrc
source ~/.zshrc
source ~/.zshrc
poetry add ipykernel
poetry install
poetry install
poetry install
poetry install
poetry env use 3.9.15
poetry install
poetry run pip lsit
poetry run pip list
ls
rm poetry.lock
rm -rf .venv
poetry env use 3.9.15
poetry install
poetry install
rm -rf .venv
poetry env use 3.9.15
poetry lock
poetry
poetry install
echo USE_GPU
poetry install
poetry install --only main,torch-cpu
poetry lock
poetry install --only main,torch-cpu
rm -rf .venv
poetry env use 3.9.15
poetry install --only main,torch-cpu
poetry install --only main,torch-cpu
poetry lock --no-update
poetry cache clear
poetry install --only main,torch-cpu -vvv
poetry cache clear PyPI --all
poetry lock --no-update
rm -rf .venv
poetry env use 3.9.15
poetry install
poetry source add torch_cpu --priority=explicit https://download.pytorch.org/whl/cpu
poetry install
poetry add torch<2.0
poetry add "torch<2.0"
poetry add torch
poetry add "torch<2.0"
poetry add mxnet
poetry add mxnet@latext
poetry add mxnet@latest
poetry add torch
poetry add "torch<2.0"
poetry lock --no-update
poetry install
rm -rf .venv
rm -rf poetry.lock
poetry install
poetry env use 3.9.15
poetry install
poetry install
poetry install
poetry add mxnet
poetry add "mxnet==1.9.1""
poetry add "mxnet==1.9.1"
poetry install
poetry lock
poetry install
poetry lock
poetry lock
poetry install
poetry lock
poetry install
poetry lock
poetry install
poetry add lingam
poetry lock
poetry install
sh bin/modeplait_synthetics.sh
pwd
sh bin/modeplait_synthetics.sh
which R
R
R
locale
la
locale -a | grep ja_JP
code .Rprofile
which R
R
R
R
R
locale
locale -a | grep ja_JP
sh bin/modeplait_synthetics.sh
sh bin/modeplait_synthetics.sh
sh bin/modeplait_synthetics.sh
sh bin/modeplait_synthetics.sh
dot -V
which dot
which graphviz
sh bin/modeplait_google.sh
sh bin/modeplait_google.sh
sh bin/modeplait_google.sh
poetry run pip list
poetry run pip --version
poetry add "torch<2.0"
yarn run dev
ls
cd papar
cd paper
touch pdf2docs
poetry init
poetry add pdf2docx
poetry env use 3.12
pwd
cd ..
ls
cd papers-tool
poetry run python pdf2docs.py
cd pdf
cd meacock-format-papers
cd pdf
ls
pwd
cd ../..
ls
poetry run python pdf2docs.py
poetry run python pdf2docs.py
poetry run python pdf2docs.py
poetry run python pdf2docx.py
ls
cd ..
cd papers-tool
poetry run python pdf2docx.py
poetry run python run_pdf2docx.py
emulate bash -c '. /Users/naoki/dev/git/DAG-NoCurl/.venv/bin/activate'
pip list
poetry add networkx
poetry add "networkx<3.3"
exit
poetry init
poetry add numpy
poetry run python notears/nonlinear.py
pwd
poetry run python notears/nonlinear.py
poetry add torch
poetry run python notears/nonlinear.py
poetry add scipy
poetry run python notears/nonlinear.py
poetry add igraph
poetry run python notears/nonlinear.py
poetry run python notears/nonlinear.py
poetry run python notears/nonlinear.py
poetry run python notears/nonlinear.py
poetry run python notears/nonlinear.py
poetry run python notears/nonlinear.py
poetry run python notears/nonlinear.py
poetry run python notears/nonlinear.py
poetry run python notears/nonlinear.py
poetry run python notears/nonlinear.py
poetry run python notears/nonlinear.py
poetry run python notears/nonlinear.py
poetry run python notears/nonlinear.py
poetry run python notears/nonlinear.py
poetry run python notears/nonlinear.py
poetry run python notears/nonlinear.py
poetry run pip list
poetry lock
poetry env use 3.9.15
pyenv global 3.9.15
poetry env use 3.9.15
poetry install
poetry lock
poetry add "scipy<1.14.0"
poetry install
poetry add "torch==1.13.1"
poetry run python notears/nonlinear.py
poetry add "numpy<2.0"
poetry run python notears/nonlinear.py
poetry run python notears/nonlinear.py
poetry run python notears/nonlinear.py
poetry run python notears/nonlinear.py
poetry run python notears/nonlinear.py
poetry run python notears/nonlinear.py
poetry run python notears/nonlinear.py
python casper_main.py --iter_mod 7 --run_mode 0 --linear --modeltype notears --s0 1234 \\
    --d 5 --n 1951 --trial 1 --seed 0 \\
    --lambda1 0.002 --lambda2 0.002  --graph_type "ER" --batch_size 500 --linear_sem_type "laplace"
poetry run python casper_main.py --iter_mod 7 --run_mode 0 --linear --modeltype notears --s0 1234 \\
    --d 5 --n 1951 --trial 1 --seed 0 \\
    --lambda1 0.002 --lambda2 0.002  --graph_type "ER" --batch_size 500 --linear_sem_type "laplace"
poetry run python casper_main.py --iter_mod 7 --run_mode 0 --linear --modeltype notears --s0 1234 \\
    --d 5 --n 1951 --trial 1 --seed 0 \\
    --lambda1 0.002 --lambda2 0.002  --graph_type "ER" --batch_size 500 --linear_sem_type "laplace"
poetry run python casper_main.py --iter_mod 7 --run_mode 0 --linear --modeltype notears --s0 1234 \\
    --d 5 --n 1951 --trial 1 --seed 0 \\
    --lambda1 0.002 --lambda2 0.002  --graph_type "ER" --batch_size 500 --linear_sem_type "laplace"
poetry run python casper_main.py --iter_mod 7 --run_mode 0 --linear --modeltype notears --s0 1234 \\
    --d 5 --n 1951 --trial 1 --seed 0 \\
    --lambda1 0.002 --lambda2 0.002  --graph_type "ER" --batch_size 500 --linear_sem_type "laplace"
poetry run python casper_main.py --iter_mod 7 --run_mode 0 --linear --modeltype notears --s0 1234 \\
    --d 5 --n 1951 --trial 1 --seed 0 \\
    --lambda1 0.002 --lambda2 0.002  --graph_type "ER" --batch_size 500 --linear_sem_type "laplace"
poetry run python casper_main.py --iter_mod 7 --run_mode 0 --linear --modeltype notears --s0 121 \\
    --d 5 --n 1451 --trial 1 --seed 0 \\
    --lambda1 0.002 --lambda2 0.002  --graph_type "ER" --batch_size 500 --linear_sem_type "laplace"
poetry run python casper_main.py --iter_mod 7 --run_mode 0 --linear --modeltype notears --s0 12321 \\
    --d 5 --n 2451 --trial 1 --seed 0 \\
    --lambda1 0.002 --lambda2 0.002  --graph_type "ER" --batch_size 500 --linear_sem_type "laplace"
pwd
poetry add lingam
poetry lock
poetry install
pwd
ls
git mv notears/ casper_notears/
poetry run python casper_main.py --iter_mod 7 --run_mode 0 --linear --modeltype notears --s0 12321 \\
    --d 5 --n 2451 --trial 1 --seed 0 \\
    --lambda1 0.002 --lambda2 0.002  --graph_type "SF" --batch_size 500 --linear_sem_type "laplace"
poetry run python casper_main.py --iter_mod 7 --run_mode 0 --linear --modeltype notears --s0 1234 \\
    --d 5 --n 1951 --trial 1 --seed 0 \\
    --lambda1 0.002 --lambda2 0.002  --graph_type "SF" --batch_size 500 --linear_sem_type "laplace"
poetry run python casper_main.py --iter_mod 7 --run_mode 0 --linear --modeltype notears --s0 121 \\
    --d 5 --n 1451 --trial 1 --seed 0 \\
    --lambda1 0.002 --lambda2 0.002  --graph_type "SF" --batch_size 500 --linear_sem_type "laplace"
poetry init
pyenv versions
pyenv install 3.7
poetry env use 3.7
pyenv global 3.7
pyenv global
poetry env use 3.7
poetry env use 3.7.17
poetry env use 3.7.17
poetry run python main_efficient.py --data_variable_size=10 --graph_type="erdos-renyi" --repeat=100 --methods=<CHOICE> --h_tol=1e-8 --graph_degree=4 --lambda1=<LAMBDA1> --lambda2=<LAMBDA2> --data_type="synthetic"
poetry run python main_efficient.py --data_variable_size=10 --graph_type="erdos-renyi" --repeat=100 --methods=nocurl --h_tol=1e-8 --graph_degree=4 --lambda1=10 --lambda2=1000 --data_type="synthetic"
poetry add networkx
poetry add "networkx<3.3"
poetry add "networkx<2.6.3"
poetry add "networkx<2.6"
poetry add "networkx<2.5"
poetry add "networkx<2.4"
poetry add "networkx<2.3"
poetry add "networkx<2"
poetry add "networkx<1.0"
poetry add "networkx<1.1"
poetry shell
poetry env use 3.7.17
poetry env use python3.7
poetry add "networkx<3.3"
brew list
poetry env use Python3.10
poetry env use Python3.10
poetry add "networkx"
poetry run python main_efficient.py --data_variable_size=10 --graph_type="erdos-renyi" --repeat=100 --methods=nocurl --h_tol=1e-8 --graph_degree=4 --lambda1=10 --lambda2=1000 --data_type="synthetic"
poetry add "numpy" "pandas"
poetry run python main_efficient.py --data_variable_size=10 --graph_type="erdos-renyi" --repeat=100 --methods=nocurl --h_tol=1e-8 --graph_degree=4 --lambda1=10 --lambda2=1000 --data_type="synthetic"
poetry add tqdm
poetry run python main_efficient.py --data_variable_size=10 --graph_type="erdos-renyi" --repeat=100 --methods=nocurl --h_tol=1e-8 --graph_degree=4 --lambda1=10 --lambda2=1000 --data_type="synthetic"
poetry add scipy
poetry run python main_efficient.py --data_variable_size=10 --graph_type="erdos-renyi" --repeat=100 --methods=nocurl --h_tol=1e-8 --graph_degree=4 --lambda1=10 --lambda2=1000 --data_type="synthetic"
poetry run python main_efficient.py --data_variable_size=10 --graph_type="erdos-renyi" --repeat=100 --methods=nocurl --h_tol=1e-8 --graph_degree=4 --lambda1=10 --lambda2=1000 --data_type="synthetic"
poetry add openpyxl
poetry add xlwt
poetry lock
poetry install
pwd
cd out
cd ..
ls
sh bin/modeplait_synthetics.sh
sh bin/modeplait_synthetics.sh
sh bin/modeplait_synthetics.sh
sh bin/modeplait_synthetics.sh
rm -rf /Users/naoki/dev/git/ModePlait-dev/out/synthetics_1
sh bin/modeplait_synthetics.sh
sh bin/modeplait_synthetics.sh
poetry run torch --version
poetry run pip list
poetry update torch
poetry run pip list
cd papers-tool
poetry add ruff
poetry run python meacock-formater.py
poetry run python meacock-formatter.py
poetry run python meacock-formatter.py
poetry run python meacock-formatter.py
poetry run python meacock-formatter.py
poetry run python meacock-formatter.py
poetry run python meacock-formatter.py
poetry run python meacock-formatter.py
poetry run python meacock-formatter.py
oh-my-posh upgrade
sh bin/grid-demo2.sh
mkfir bin
mkdir bin
sh bin/demo.sh
sh bin/demo.sh
sh bin/demo.sh
sh bin/demo.sh
sh bin/demo.sh
sh bin/demo.sh
sh bin/demo.sh
sh bin/demo.sh
sh bin/demo.sh
sh bin/demo.sh
sh bin/demo.sh
sh bin/demo.2sh
sh bin/demo2.sh
sh bin/demo2.sh
sh bin/demo.sh
sh bin/demo.sh
sh bin/demo.sh
sh bin/demo.sh
sh bin/demo.sh
sh bin/demo.sh
sh bin/demo.sh
sh bin/demo.sh
sh bin/demo.sh
sh bin/demo.sh
sh bin/demo.sh
sh bin/demo.sh
sh bin/demo.sh
sh bin/demo.sh
sh bin/demo.sh
sh bin/demo.sh
sh bin/grid-demo2.sh
sh bin/grid-demo2.sh
sh bin/grid-demo2.sh
sh bin/grid-demo2.sh
sh bin/demo2.sh
sh bin/demo2.sh
sh bin/grid-demo2.sh
sh bin/grid-demo2.sh
emulate bash -c '. /Users/naoki/dev/git/ModePlait-dev/.venv/bin/activate'
pip freeze > requirements.txt
exit
poetry shell 
make freeze
tree
tree -d
tree
tree -d
sh bin/demo.sh
poetry add ipykernel
sh bin/demo2.sh
sh bin/demo2.sh
sh bin/demo2.sh
sh bin/demo2.sh
sh bin/demo2.sh
sh bin/demo2.sh
sh bin/demo2.sh
sh bin/demo2.sh
sh bin/demo2.sh
sh bin/demo2.sh
sh bin/demo2.sh
sh bin/demo2.sh
sh bin/demo2.sh
sh bin/demo2.sh
sh bin/demo2.sh
sh bin/demo2.sh
sh bin/demo2.sh
sh bin/demo2.sh
sh bin/demo2.sh
sh bin/demo2.sh
sh bin/demo2.sh
sh bin/demo2.sh
sh bin/demo2.sh
sh bin/demo2.sh
sh bin/demo2.sh
sh bin/demo2.sh
sh bin/demo2.sh
sh bin/demo2.sh
sh bin/demo2.sh
sh bin/demo2.sh
sh bin/demo2.sh
sh bin/demo2.sh
poetry add cdt
sh bin/demo2.sh
poetry add torch
sh bin/demo2.sh
sh bin/demo2.sh
sh bin/demo2.sh
sh bin/demo2.sh
sh bin/demo2.sh
sh bin/demo2.sh
sh bin/demo2.sh
sh bin/demo2.sh
sh bin/demo2.sh
sh bin/grid-demo2.sh
sh bin/grid-demo2.sh
sh bin/grid-demo2.sh
sh bin/grid-demo2.sh
poetry lock
poetry env use 3.9.17
poetry env use 3.9.17
poetry env use 3.9.17
poetry env use 3.9.15
poetry lock
poetry install
poetry install
sh bin/demo.sh
sh bin/demo.sh
sh bin/demo.sh
sh bin/demo.sh
sh bin/demo.sh
sh bin/demo.sh
sh bin/demo.sh
sh bin/demo.sh
sh bin/demo.sh
sh bin/demo.sh
sh bin/demo.sh
sh bin/demo.sh
sh bin/demo.sh
sh bin/demo.sh
sh bin/demo.sh
sh bin/demo.sh
sh bin/demo.sh
sh bin/demo.sh
sh bin/demo.sh
sh bin/demo.sh
sh bin/demo.sh
sh bin/demo.sh
sh bin/demo.sh
sh bin/demo.sh
sh bin/grid-demo.sh
sh bin/grid-demo.sh
sh bin/grid-demo.sh
sh bin/grid-demo.sh
sh bin/grid-demo.sh
sh bin/grid-demo.sh
sh bin/grid-demo.sh
sh bin/grid-demo.sh
sh bin/grid-demo.sh
sh bin/grid-demo.sh
sh bin/grid-demo2.sh
sh bin/grid-demo2.sh
poetry init
poetry init
poetry run python -m DAG_from_GNN
poetry add "matplotlib" "networkx" "numpy"
poetry add netgraph
poetry add pip install -r requirements.txt
poetry add pip install -m requirements.txt
poetry add pip install requirements.txt
poetry add torch
poetry add scipy
poetry add pandas
poetry run python -m DAG_from_GNN
poetry add "networkx<2.6"
poetry run python -m DAG_from_GNN
poetry add "numpy<2.0"
poetry run python -m DAG_from_GNN
cd ../..
ls
pwd
cd ..
cd Downloads
pwd
poetry lock
poetry lock
poetry install
poetry add networkx
poetry add "networkx<3.3"
poetry add "networkx<2.6"
poetry remove "networkx" "dag-from-gnn"
poetry add causal-learn
pwd
poetry remove causal-learn
pwd
R
pyclone
cd ..
code Structural-Intervention-Distance
poetry use env 3.9.15
poetry env use 3.9.15
pyenv global 3.9.15
poetry env use 3.9.15
rm -rf .v
rm -rf .venv
pyenv global 3.9.15
poetry env use 3.9.15
poetry lock
poetry insall
poetry install
poetry run pip list
poetry add ipykernel
poetry run pip list
poetry install
poetry lock
poetry install
poetry lock
poetry install
sh bin/covid19.sh
sh bin/covid19.sh
sh bin/covid19.sh
sh bin/google.sh
sh bin/google.sh
sh bin/covid19.sh
pip list
poetry run pip list
sh bin/covid19.sh
npx zenn preview
make install
poetry run python grammarly
poetry run python grammarly_formatter.py
sh demo.sh
sh demo.sh
sh demo.sh
poetry init
poetry env use 3.12
poetry add openai
poetry run python demo.
poetry run python demo.py
poetry run python demo.py
poetry add python-dotenv
poetry add python-dotenv
poetry run python demo.py
poetry run python demo.py
poetry add streamlit
streamlit run app.py
poetry run streamlit run app.py
poetry run streamlit run app.py
poetry run streamlit run app.py
poetry run streamlit run app.py
poetry run streamlit run app.py
poetry run streamlit run app.py
poetry run streamlit run app.py
poetry run streamlit run app.py
poetry run streamlit run app.py
poetry run streamlit run app.py
git remote add https://github.com/C-Naoki/PLaMo-100B.git
git remote add origin https://github.com/C-Naoki/PLaMo-100B.git
git remote -V
git remote -v
git remote set-url origin https://github.com/C-Naoki/PLaMo-100B.git
git remote -v
git remote -v
git status
pwd
la
git init
git remote -v
git remote set-url origin https://github.com/C-Naoki/PLaMo-100B.git
git remote add origin https://github.com/C-Naoki/PLaMo-100B.git
git remote -v
touch README.md
poetry run streamlit run app.py
toucn README.md
touch README.md
poetry init
poetry use env 3.12
poetry env use 3.12
poetry add "numpy" "pandas" "beautifulsoup4"
poetry add ipykernel
poetry add requents
poetry add requests
poetry add openreview-py
pyenv global 3.9.15
poetry use env 3.9.15
poetry env use 3.9.15
poetry env use 3.9.15
poetry add openreview-py
poetry lock
poetry install
source ~/.zshrc
npx zenn preview
yarn run dev
yarn run dev
yarn run dev
npx zenn preview
npx zenn preview
poetry run streamlit app.py
poetry run streamlit run app.py
touch README.md
git remote add origin https://github.com/C-Naoki/growing-grass.git
git init
git remote add origin https://github.com/C-Naoki/growing-grass.git
la
git remote set-url origin https://github.com/C-Naoki/growing-grass.git
git status
git remote -v
git add .
git commit --allow-empty -m ":pencil2: docs: add time" --date="Aug 5 14:12:38 2024 +0000"
git push
git add .
git commit --allow-empty -m ":pencil2: docs: add time" --date="Jul 29 23:49:09 2024 +0000"
git push
git add .
git commit --allow-empty -m ":pencil2: docs: add time" --date="Jun 18 23:49:09 2024 +0900"
git push
git commit --allow-empty -m ":pencil2: docs: add time" --date="Jun 15 23:49:09 2024 +0900"
git push
git add .
git commit --allow-empty -m ":pencil2: docs: add time" --date="May 10 23:49:09 2024 +0900"
git push
git add .
git commit --allow-empty -m ":pencil2: docs: add time" --date="Feb 16 23:49:09 2024 +0900"
git push
git pull
git pull origin main
git add .
git commit --allow-empty -m ":pencil2: docs: add time" --date="Feb 10 11:28:33 2024 +0000"
git push
git reset --hard HEAD^
$ git push -f origin HEAD\

git push -f origin HEAD\

sed -i '1a '"$(date)"'' README.md
pws
pwd
ld
ls
sed -i "aaa" README.md
sed -i 's/^/aaa/' README.md
sed -i '1iaaa' README.md
sed -i '' '1iaaa' README.md
git add README.md
git commit --allow-empty -m ":pencil2: docs: add time" --date="Dec 11 23:49:09 2019 +0900"
git push
poetry run pip freeze > requirements.txt
yarn run dev
mkdir .github/workflows
mkdir .github
mkdir .github/workflows
touch README.md
la
cd ..
la
git remote -V
git remote -v
rm .git/
rm .git
ls
la
rm -rf .git
la
rm .DS_Store
la
la
cd dotfiles
ls
ls
cd dev/git
ls
mkdir dotfiles
code dotfiles
code dotfiles
la
cd
la
yarn run dev
brew bundle
$ brew bundle dump --global
brew bundle dump --global
brew bundle
brew bundle --file=~/.Brewfile
brew bundle --file=~/.Brewfile
touch Makefile
mkdir .vscode
mkdir .bin
